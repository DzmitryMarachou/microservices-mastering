buildscript {
  ext {
    springBootVersion = '1.3.0.M5'
    dockerPluginVersion = '0.8.2'
  }
  repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
    classpath "com.bmuschko:gradle-docker-plugin:${dockerPluginVersion}"
  }
}

allprojects {
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'provided-base'

  repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://dl.bintray.com/aatarasoff/maven" }
  }

  dependencyManagement {
    imports {
      mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M1"
    }
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'spring-boot'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  jar {
    archiveName = project.name + ".jar"
  }

  dependencies {
    provided("org.projectlombok:lombok")

    compile "com.ecwid.consul:consul-api:+"
    compile "joda-time:joda-time:+"

    testCompile("org.springframework.boot:spring-boot-starter-test")
  }

  task dockerBuild << {
    exec {
      commandLine 'docker', 'build','--force-rm=true', "--tag='${project.name}'", '.'
    }
  }

  dockerBuild.dependsOn build
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.6'
}
